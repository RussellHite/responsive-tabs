export declare const datasourceWebOutput = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix UI Content Team\n */\nimport { ComponentType, CSSProperties } from \"react\";\nimport { ActionValue, EditableValue, ListValue, ListActionValue, ListAttributeValue, ListWidgetValue } from \"mendix\";\n\nexport interface DatasourcePropertiesType {\n    contentAttribute: ListWidgetValue;\n    markerAttribute: ListAttributeValue<string | boolean | BigJs.Big>;\n    actionAttribute?: ListActionValue;\n}\n\nexport interface DatasourcePropertiesPreviewType {\n    contentAttribute: { widgetCount: number; renderer: ComponentType };\n    markerAttribute: string;\n    actionAttribute: {} | null;\n}\n\nexport interface MyWidgetContainerProps {\n    name: string;\n    class: string;\n    style?: CSSProperties;\n    tabIndex: number;\n    contentSource: ListValue;\n    content: ListWidgetValue;\n    markerDataAttribute: ListAttributeValue<string | boolean | BigJs.Big>;\n    actionAttribute?: ListActionValue;\n    datasourceProperties: DatasourcePropertiesType[];\n    description: EditableValue<string>;\n    action?: ActionValue;\n}\n\nexport interface MyWidgetPreviewProps {\n    class: string;\n    style: string;\n    contentSource: {} | null;\n    content: { widgetCount: number; renderer: ComponentType };\n    markerDataAttribute: string;\n    actionAttribute: {} | null;\n    datasourceProperties: DatasourcePropertiesPreviewType[];\n    description: string;\n    action: {} | null;\n}\n";
export declare const datasourceNativeOutput = "export interface DatasourcePropertiesType {\n    contentAttribute: ListWidgetValue;\n    markerAttribute: ListAttributeValue<string | boolean | BigJs.Big>;\n    actionAttribute?: ListActionValue;\n}\n\nexport interface MyWidgetProps<Style> {\n    name: string;\n    style: Style[];\n    contentSource: ListValue;\n    content: ListWidgetValue;\n    markerDataAttribute: ListAttributeValue<string | boolean | BigJs.Big>;\n    actionAttribute?: ListActionValue;\n    datasourceProperties: DatasourcePropertiesType[];\n    description: EditableValue<string>;\n    action?: ActionValue;\n}";
