export declare const nativeResult = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix UI Content Team\n */\nimport { ActionValue, DynamicValue, EditableValue, FileValue, NativeImage } from \"mendix\";\n\nexport type BootstrapStyleEnum = \"default\" | \"primary\" | \"success\" | \"info\" | \"inverse\" | \"warning\" | \"danger\";\n\nexport type MywidgetTypeEnum = \"badge\" | \"label\";\n\nexport interface ActionsType {\n    name: string;\n    enabled: boolean;\n    action?: ActionValue;\n    image: DynamicValue<NativeImage>;\n}\n\nexport interface ActionsPreviewType {\n    name: string;\n    enabled: boolean;\n    action: {} | null;\n    image: string;\n}\n\nexport interface MyWidgetProps<Style> {\n    name: string;\n    style: Style[];\n    valueAttribute?: EditableValue<string | BigJs.Big>;\n    mywidgetValue: string;\n    valueExpression?: DynamicValue<string>;\n    valueExpressionDecimal?: DynamicValue<BigJs.Big>;\n    file: DynamicValue<FileValue>;\n    bootstrapStyle: BootstrapStyleEnum;\n    mywidgetType: MywidgetTypeEnum;\n    tries?: number;\n    amount?: BigJs.Big;\n    image?: DynamicValue<NativeImage>;\n    onClickAction?: ActionValue;\n    onChange?: ActionValue;\n    actions: ActionsType[];\n}\n\nexport interface MyWidgetPreviewProps {\n    class: string;\n    style: string;\n    valueAttribute: string;\n    mywidgetValue: string;\n    valueExpression: string;\n    valueExpressionDecimal: string;\n    file: string;\n    bootstrapStyle: BootstrapStyleEnum;\n    mywidgetType: MywidgetTypeEnum;\n    tries: number | null;\n    amount: number | null;\n    image: string;\n    onClickAction: {} | null;\n    onChange: {} | null;\n    actions: ActionsPreviewType[];\n}\n";
export declare const webResult = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix UI Content Team\n */\nimport { CSSProperties } from \"react\";\nimport { ActionValue, DynamicValue, EditableValue, FileValue, WebImage } from \"mendix\";\n\nexport type BootstrapStyleEnum = \"default\" | \"primary\" | \"success\" | \"info\" | \"inverse\" | \"warning\" | \"danger\";\n\nexport type MywidgetTypeEnum = \"badge\" | \"label\";\n\nexport interface ActionsType {\n    name: string;\n    enabled: boolean;\n    action?: ActionValue;\n    image: DynamicValue<WebImage>;\n}\n\nexport interface ActionsPreviewType {\n    name: string;\n    enabled: boolean;\n    action: {} | null;\n    image: string;\n}\n\nexport interface MyWidgetContainerProps {\n    name: string;\n    class: string;\n    style?: CSSProperties;\n    tabIndex: number;\n    valueAttribute?: EditableValue<string | BigJs.Big>;\n    mywidgetValue: string;\n    valueExpression?: DynamicValue<string>;\n    valueExpressionDecimal?: DynamicValue<BigJs.Big>;\n    file: DynamicValue<FileValue>;\n    bootstrapStyle: BootstrapStyleEnum;\n    mywidgetType: MywidgetTypeEnum;\n    tries?: number;\n    amount?: BigJs.Big;\n    image?: DynamicValue<WebImage>;\n    onClickAction?: ActionValue;\n    onChange?: ActionValue;\n    actions: ActionsType[];\n}\n\nexport interface MyWidgetPreviewProps {\n    class: string;\n    style: string;\n    valueAttribute: string;\n    mywidgetValue: string;\n    valueExpression: string;\n    valueExpressionDecimal: string;\n    file: string;\n    bootstrapStyle: BootstrapStyleEnum;\n    mywidgetType: MywidgetTypeEnum;\n    tries: number | null;\n    amount: number | null;\n    image: string;\n    onClickAction: {} | null;\n    onChange: {} | null;\n    actions: ActionsPreviewType[];\n}\n";
